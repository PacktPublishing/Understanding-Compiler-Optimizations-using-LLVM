Code before inlining

define i32 @foo(i32 %x) {
  %1 = mul i32 %x, 2
  ret i32 %1
}

define i32 @main() {
  %x = alloca i32
  store i32 10, i32* %x
  %1 = load i32, i32* %x
  %2 = call i32 @foo(i32 %1)
  ret i32 %2
}

opt command to run function inlining : opt -passes=inline example.ll

output after inlining:

define i32 @foo(i32 %x) {
  %1 = mul i32 %x, 2
  ret i32 %1
}

define i32 @main() {
  %x = alloca i32, align 4
  store i32 10, ptr %x, align 4
  %1 = load i32, ptr %x, align 4
  %2 = mul i32 %1, 2
  ret i32 %2
}
